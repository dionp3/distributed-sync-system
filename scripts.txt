python -m venv venv 

venv\Scripts\activate

deactivate

pip install -r requirements.txt


docker compose -f docker/docker-compose.yml down

docker compose -f docker/docker-compose.yml --env-file .env up --build -d

docker compose -f docker/docker-compose.yml ps

locust -f benchmarks/load_test_scenarios.py


$env:PYTHONPATH='.' ; pytest .\tests\unit\test_cache_lru.py

$env:PYTHONPATH='.' ; pytest .\tests\unit\test_consistent_hash.py

$env:PYTHONPATH='.' ; pytest .\tests\unit\test_deadlock_logic.py

$env:PYTHONPATH='.' ; pytest .\tests\unit\test_raft_helper.py


$env:PYTHONPATH='.' ; pytest .\tests\integration\test_api_endpoints.py





# =====================================================================
# 1. PERSIAPAN GLOBAL DAN IDENTIFIKASI LEADER RAFT
#    Tujuan: Menemukan Leader Raft yang aktif dan menyimpan portnya.
# =====================================================================

# Definisikan variabel global dan headers
$Ports = 8001, 8002, 8003
$headers = @{"Content-Type" = "application/json"}
$LeaderPort = $null 
$probeBody = @{lock_name = "probe_lock"; client_id = "PowerShell_Prober"; lock_type = "exclusive"} | ConvertTo-Json

Write-Host "--- Memulai Probing untuk Leader Raft (Ports: 8001, 8002, 8003) ---"

# Loop Probing untuk menemukan Leader
foreach ($Port in $Ports) {
    $lockURL = "http://localhost:$Port/lock/acquire"
    try {
        $result = Invoke-RestMethod -Uri $lockURL -Method Post -Headers $headers -Body $probeBody
        
        if ($result.success -eq $True) {
            Write-Host "‚úÖ LEADER DITEMUKAN: Node pada port $Port."
            
            # Rilis lock probe
            $releaseURL = "http://localhost:$Port/lock/release"
            Invoke-RestMethod -Uri $releaseURL -Method Post -Headers $headers -Body (@{lock_name = "probe_lock"; client_id = "PowerShell_Prober"} | ConvertTo-Json) | Out-Null
            
            $LeaderPort = $Port
            break
        } elseif ($result.error -eq "NOT_LEADER") {
            Write-Host "‚ùå FOLLOWERS/CANDIDATE: Node $Port bukan Leader."
        }
    } catch {
        Write-Host "üõë ERROR JARINGAN: Koneksi gagal ke port $Port. (Mungkin Node Crash)"
    }
}
Write-Host "---------------------------------------------------------"
if ($LeaderPort) {
    Write-Host "üîë Raft Leader Aktif di Port $LeaderPort. Memulai pengujian DLM..."
} else {
    Write-Host "‚ö†Ô∏è GAGAL menemukan Leader. Raft klaster tidak stabil."
    exit
}

# =====================================================================
# 2. UJI DISTRIBUTED LOCK MANAGER (DLM) - KONSISTENSI DAN DEADLOCK
#    Tujuan: Verifikasi acquire, contention, dan Deadlock Detection.
# =====================================================================

$lockAcquireURL = "http://localhost:$LeaderPort/lock/acquire"
$lockReleaseURL = "http://localhost:$LeaderPort/lock/release"
$dataA = @{lock_name="DB_RW"; client_id="ClientA"; lock_type="exclusive"; timeout=10.0}
$dataB = @{lock_name="DB_RW"; client_id="ClientB"; lock_type="exclusive"; timeout=10.0}

# --- 2.1. Acquire Lock (Client A) ---
Write-Host "`n[1] Client A: Mengakuisisi Lock..."
$resultA = irm -Uri $lockAcquireURL -Method Post -Headers $headers -Body ($dataA | ConvertTo-Json)
Write-Host "    Status Acquire A: $($resultA.success)"

# --- 2.2. Contention (Client B) ---
Write-Host "[2] Client B: Menguji Contention (Harus Ditolak)..."
$resultB = irm -Uri $lockAcquireURL -Method Post -Headers $headers -Body ($dataB | ConvertTo-Json)
Write-Host "    Status Acquire B: $($resultB.success)"

# --- 2.3. Uji Deadlock Detection ---
Write-Host "`n[3] Uji Deadlock: Menunggu 12 detik (Lock Timeout = 10s)..."
Write-Host "    (Cek Log Node $LeaderPort untuk pesan 'DEADLOCK DETECTED')"
Start-Sleep -Seconds 12 

# --- 2.4. Acquire Ulang (Client B) ---
Write-Host "[4] Client B: Acquire Ulang (Harus Berhasil Setelah Deteksi)..."
$finalResult = irm -Uri $lockAcquireURL -Method Post -Headers $headers -Body ($dataB | ConvertTo-Json)

if ($finalResult.success -eq $True) {
    Write-Host "‚úÖ PASSED: Deadlock Detection BERHASIL. Lock berhasil didapat oleh Client B."
    # Cleanup Final
    irm -Uri $lockReleaseURL -Method Post -Headers $headers -Body ($dataB | ConvertTo-Json) | Out-Null
} else {
    Write-Host "‚ùå FAILED: Lock masih macet atau Leader Crash."
}

# =====================================================================
# 3. UJI DISTRIBUTED QUEUE SYSTEM - AT-LEAST-ONCE DELIVERY
#    Tujuan: Membuktikan Redelivery Monitor mengembalikan pesan yang macet.
# =====================================================================

$QueuePort = 8011
$topicName = "INVOICE_PROCESS"
$urlQueuePublish = "http://localhost:$QueuePort/queue/publish"
$urlQueueConsume = "http://localhost:$QueuePort/queue/consume"

# --- 3.1. Publish Pesan ---
irm -Uri $urlQueuePublish -Method Post -Headers $headers -Body (@{topic=$topicName; data=@{order_id="ORD101"}} | ConvertTo-Json) | Out-Null
Write-Host "`n[5] Pesan dipublish ke Port $QueuePort."

# --- 3.2. Consume Pertama (Pindah ke Pending) ---
$msgResult = Invoke-RestMethod -Uri $urlQueueConsume -Method Post -ContentType "application/json" -Body (@{topic=$topicName} | ConvertTo-Json)
$MessageID = $msgResult.message.id
Write-Host "    Pesan dikonsumsi (ID: $MessageID). TIDAK ada ACK."

# --- 3.3. Uji Redelivery ---
Write-Host "‚è±Ô∏è Menunggu 35 detik untuk Redelivery Monitor (Timeout 30s)..."
Start-Sleep -Seconds 35

# --- 3.4. Consume Kedua ---
Write-Host "[6] Consume Kedua (Harus Menerima Pesan yang Sama)..."
$msgResult2 = Invoke-RestMethod -Uri $urlQueueConsume -Method Post -ContentType "application/json" -Body (@{topic=$topicName} | ConvertTo-Json)

if ($msgResult2.message.id -eq $MessageID) {
    Write-Host "‚úÖ PASSED: At-Least-Once Delivery BERHASIL (Pesan ID $MessageID di-Redeliver)."
    # Cleanup: Kirim ACK pada pesan yang telah dikembalikan
    $urlQueueAck = "http://localhost:$QueuePort/queue/ack"
    irm -Uri $urlQueueAck -Method Post -Headers $headers -Body (@{topic=$topicName; message_id=$MessageID} | ConvertTo-Json) | Out-Null
} else {
    Write-Host "‚ùå FAILED: Redelivery Monitor tidak bekerja atau pesan hilang."
}